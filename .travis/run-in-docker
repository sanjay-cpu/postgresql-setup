#! /bin/bash -x

ARCH=`uname -m`

#Putted condition for ppc64le and removed "-t" from the command to resolve the error like " the input device is not a tty"
if [ "$ARCH" = "ppc64le" ]; then
container_id=$(
    docker run -d -i -v `pwd`:/workdir:Z -u $(id -u) registry.fedoraproject.org/fedora bash
)
else
container_id=$(
    docker run -d -ti -v `pwd`:/workdir:Z -u $(id -u) registry.fedoraproject.org/fedora bash
)
fi

cleanup ()
{
    docker rm --force "$container_id"
}

trap cleanup EXIT

run_in_container ()
{
    local uid=$(id -u)
    if ${as_root-false}; then
        uid=0
    fi
    
 #Putted condition for ppc64le and removed "-t" from the command to resolve the error like " the input device is not a tty"
if [ "$ARCH" = "ppc64le" ]; then
    docker exec -u $uid -i "$container_id" "$@"
else
    docker exec -u $uid -ti "$container_id" "$@"
fi

}

buildrequires='
autoconf-archive
automake
help2man
elinks
findutils
docbook-utils
postgresql-devel
postgresql-server
make
'

as_root=true \
run_in_container bash -c "dnf install -y $(echo $buildrequires)"
run_in_container bash -c "set -x ; cd /workdir && ./.travis/distcheck"
